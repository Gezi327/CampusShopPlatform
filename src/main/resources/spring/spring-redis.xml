<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- redis连接池设置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 控制一个连接池可分配多少个jedis实例 -->
        <property name="maxTotal" value="${redis.pool.maxActive}"/>
        <!-- 连接池种最多可空闲 maxIdle 个连接，这里取值为20，
            表示即使没有数据库连接时依然可以保持20空闲的连接，而不被清除，随时处于待命状态 -->
        <property name="maxIdle" value="${redis.pool.maxIdle}"/>
        <!-- 最大等待时间：当没有可用连接时，连接池等待连接被归还的最大等待时间(以毫秒计数)，超时则抛出异常 -->
        <property name="maxWaitMillis" value="${redis.pool.maxWait}"/>
        <!-- 在获取连接的时候检查有效性 -->
        <property name="testOnBorrow" value="${redis.pool.testOnBorrow}"/>
    </bean>

    <!-- 创建redis连接池，并做相关配置 -->
    <bean id="jedisWritePool" class="com.cheng.o2o.cache.JedisPoolWriper" depends-on="jedisPoolConfig">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig"/>
        <constructor-arg name="host" value="${redis.hostName}"/>
        <constructor-arg name="port" value="${redis.port}" type="int"/>
        <constructor-arg name="timeout" value="${redis.timeout}" type="int"/>
        <constructor-arg name="password" value="${redis.password}"/>
    </bean>


    <!-- 创建redis工具类，封装好redis的连接以进行相关的操作 (scope：单例) -->
    <bean id="jedisUtil" class="com.cheng.o2o.cache.JedisUtil">
        <property name="jedisPool" ref="jedisWritePool"/>
    </bean>

    <!-- redis的 key 操作 (scope：单例) -->
    <bean id="jedisKeys" class="com.cheng.o2o.cache.JedisUtil$Keys"/>

    <!-- redis的 key 操作 (scope：单例) -->
    <bean id="jedisStrings" class="com.cheng.o2o.cache.JedisUtil$Strings"/>
</beans>